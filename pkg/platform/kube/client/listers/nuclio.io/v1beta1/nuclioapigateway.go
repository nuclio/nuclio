/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1beta1

import (
	v1beta1 "github.com/nuclio/nuclio/pkg/platform/kube/apis/nuclio.io/v1beta1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// NuclioAPIGatewayLister helps list NuclioAPIGateways.
type NuclioAPIGatewayLister interface {
	// List lists all NuclioAPIGateways in the indexer.
	List(selector labels.Selector) (ret []*v1beta1.NuclioAPIGateway, err error)
	// NuclioAPIGateways returns an object that can list and get NuclioAPIGateways.
	NuclioAPIGateways(namespace string) NuclioAPIGatewayNamespaceLister
	NuclioAPIGatewayListerExpansion
}

// nuclioAPIGatewayLister implements the NuclioAPIGatewayLister interface.
type nuclioAPIGatewayLister struct {
	indexer cache.Indexer
}

// NewNuclioAPIGatewayLister returns a new NuclioAPIGatewayLister.
func NewNuclioAPIGatewayLister(indexer cache.Indexer) NuclioAPIGatewayLister {
	return &nuclioAPIGatewayLister{indexer: indexer}
}

// List lists all NuclioAPIGateways in the indexer.
func (s *nuclioAPIGatewayLister) List(selector labels.Selector) (ret []*v1beta1.NuclioAPIGateway, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1beta1.NuclioAPIGateway))
	})
	return ret, err
}

// NuclioAPIGateways returns an object that can list and get NuclioAPIGateways.
func (s *nuclioAPIGatewayLister) NuclioAPIGateways(namespace string) NuclioAPIGatewayNamespaceLister {
	return nuclioAPIGatewayNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// NuclioAPIGatewayNamespaceLister helps list and get NuclioAPIGateways.
type NuclioAPIGatewayNamespaceLister interface {
	// List lists all NuclioAPIGateways in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1beta1.NuclioAPIGateway, err error)
	// Get retrieves the NuclioAPIGateway from the indexer for a given namespace and name.
	Get(name string) (*v1beta1.NuclioAPIGateway, error)
	NuclioAPIGatewayNamespaceListerExpansion
}

// nuclioAPIGatewayNamespaceLister implements the NuclioAPIGatewayNamespaceLister
// interface.
type nuclioAPIGatewayNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all NuclioAPIGateways in the indexer for a given namespace.
func (s nuclioAPIGatewayNamespaceLister) List(selector labels.Selector) (ret []*v1beta1.NuclioAPIGateway, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1beta1.NuclioAPIGateway))
	})
	return ret, err
}

// Get retrieves the NuclioAPIGateway from the indexer for a given namespace and name.
func (s nuclioAPIGatewayNamespaceLister) Get(name string) (*v1beta1.NuclioAPIGateway, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1beta1.Resource("nuclioapigateway"), name)
	}
	return obj.(*v1beta1.NuclioAPIGateway), nil
}
