# Copyright 2017 The Nuclio Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Build the processor
FROM golang:1.13-alpine3.10 as processor

RUN apk --update --no-cache add git gcc musl-dev

WORKDIR /go/src/github.com/nuclio/nuclio

# copy go modules first, will help docker caching upon building
COPY go.mod go.sum ./

RUN go mod download

# copy source tree
COPY . .

# build the processor
RUN GOOS=linux GOARCH=amd64 go build -a -installsuffix cgo -ldflags="-s -w" -o /home/nuclio/bin/processor cmd/processor/main.go

# Build the plugin
FROM golang:1.13-alpine3.10

# If build passes NUCLIO_ARCH, use it as GOARCH
ARG NUCLIO_ARCH
ENV GOARCH ${NUCLIO_ARCH}

RUN apk --update --no-cache add git gcc musl-dev

# Copy processor binary
COPY --from=processor /home/nuclio/bin/processor /home/nuclio/bin/processor

# Copy processor go.mod & go.sum, we will need it for building the handler.so (the actual function)
COPY --from=processor /go/src/github.com/nuclio/nuclio/go.sum /go
COPY --from=processor /go/src/github.com/nuclio/nuclio/go.mod /go
COPY --from=processor /go/pkg/mod /go/pkg/mod

# Copy the script that builds the plugin
COPY pkg/processor/build/runtime/golang/docker/onbuild/build-handler.sh /

# Specify the directory where the handler is kept. By default it is the context dir, but it is overridable
ONBUILD ARG NUCLIO_BUILD_LOCAL_HANDLER_DIR=.

# Specify the directory where the handler is written to (aka the module path, used on go.mod)
ONBUILD ARG NUCLIO_BUILD_IMAGE_HANDLER_DIR=github.com/nuclio/handler

# Copy handler sources to container, build-handler will move it to the right place
ONBUILD COPY ${NUCLIO_BUILD_LOCAL_HANDLER_DIR} /go/src/${NUCLIO_BUILD_IMAGE_HANDLER_DIR}

# Specify an onbuild arg to specify offline
ONBUILD ARG NUCLIO_BUILD_OFFLINE

# Run build
ONBUILD RUN /build-handler.sh ${NUCLIO_BUILD_IMAGE_HANDLER_DIR}
