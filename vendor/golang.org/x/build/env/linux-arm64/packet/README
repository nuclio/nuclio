Only needed to create new machines: (skip this step)

  https://app.packet.net/
  login info: http://go/go-builder-packet

Machines:

golang-builder-1:

     $ ssh -i ~/keys/id_ed25519_golang1 root@147.75.74.194
     (key: http://go/golang-ssh-key)

Machine details:

  root@go-builder:~# cat /proc/cpuinfo | grep process | wc -l
  96
 
  root@go-builder:~/packet# free
                total        used        free      shared  buff/cache   available
  Mem:       32876144     1091236    30183828       17852     1601080    31052836
  Swap:       2441980           0     2441980



  root@go-builder:~# lsb_release  -a
  No LSB modules are available.
  Distributor ID: Ubuntu
  Description:  Ubuntu 16.04.2 LTS
  Release:  16.04
  Codename: xenial



But each machine is setup like (from within build/env/linux-arm64):

   # local
   $ scp -i ~/keys/id_ed25519_golang1 -r . root@147.75.74.194:~

   $ GOARCH=arm64 GOOS=linux CGO_ENABLED=0 go build golang.org/x/build/cmd/rundockerbuildlet && \
     scp -i ~/keys/id_ed25519_golang1 rundockerbuildlet root@147.75.74.194:/usr/local/bin

   # on packet box
   $ apt-get update && apt-get install docker.io

   $ cd packet && ./build.sh (with Dockerfile in same directory)

   $ echo "<BUILDER KEY>" > /etc/gobuild.key # see go/go-builder-notes

   $ cp rundockerbuildlet.service /etc/systemd/user/

   $ systemctl enable /etc/systemd/user/rundockerbuildlet.service
   $ systemctl start rundockerbuildlet.service