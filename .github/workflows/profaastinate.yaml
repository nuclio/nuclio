name: Validate Profaastinate Nexus

on:
  pull_request:
    branches: [ mpga-development ]

  workflow_dispatch:

env:
  REGISTRY: ghcr.io

jobs:
  install-deps:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        go-version: [ 1.21.x ]  # Add other versions if needed

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Go ${{ matrix.go-version }}
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
      - name: Install dependencies
        run: go mod tidy

  lint:
    runs-on: ubuntu-latest
    needs: install-deps
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Go ${{ matrix.go-version }}
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
      - name: Install golangci-lint
        run: curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.55.2
      - name: Run Profaastinate Lint
        run: golangci-lint run ./pkg/nexus/...

  test:
    runs-on: ubuntu-latest
    needs: install-deps
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Go ${{ matrix.go-version }}
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
      - name: Run Profaastinate Tests
        run: go test -cover ./pkg/nexus/...

  build:
    runs-on: ubuntu-latest
    needs:
      - lint
      - test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-profaastinate
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha
            latest

      - name: Log in to registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Make dashboard
        run: make dashboard

      - name: Push docker profaastinate image
        run: docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-profaastinate:${{ github.sha }}