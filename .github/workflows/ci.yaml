name: CI

on:
  pull_request:
    branches:
      - 1.1.x
  push:
    branches:
      - 1.1.x

env:
  GO_VERSION: 1.12.x
  GO111MODULE: off
  GOPATH: /home/runner/work/nuclio/nuclio/go
  NUCLIO_LABEL: ${{ github.run_number }}

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Dump github context
        run: echo "$GITHUB_CONTEXT"
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}

      - name: Dump runner context
        run: echo "$RUNNER_CONTEXT"
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}

      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
          path: go/src/github.com/nuclio/nuclio

      - uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Lint
        run: |
          go get github.com/v3io/v3io-go-http
          go get github.com/nuclio/logger
          go get -d github.com/nuclio/nuclio-sdk-go \
              && cd $GOPATH/src/github.com/nuclio/nuclio-sdk-go \
              && git checkout v0.0.1 \
              && cd $GOPATH/src/github.com/nuclio/nuclio
          go get github.com/nuclio/amqp
          go get -d golang.org/x/net/... \
              && cd $GOPATH/src/golang.org/x/net \
              && git checkout -t origin/release-branch.go1.10 \
              && cd $GOPATH/src/github.com/nuclio/nuclio
          go get github.com/v3io/scaler-types \
              && cd $GOPATH/src/github.com/v3io/scaler-types \
              && git checkout v1.0.0 \
              && cd $GOPATH/src/github.com/nuclio/nuclio
          make lint

  test_short:
    name: Test short
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
          path: go/src/github.com/nuclio/nuclio

      - uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Run short test
        run: |
          go get github.com/v3io/v3io-go-http
          go get github.com/nuclio/logger
          go get -d github.com/nuclio/nuclio-sdk-go \
              && cd $GOPATH/src/github.com/nuclio/nuclio-sdk-go \
              && git checkout v0.0.1 \
              && cd $GOPATH/src/github.com/nuclio/nuclio
          go get github.com/nuclio/amqp
          go get -d golang.org/x/net/... \
              && cd $GOPATH/src/golang.org/x/net \
              && git checkout -t origin/release-branch.go1.10 \
              && cd $GOPATH/src/github.com/nuclio/nuclio
          go get github.com/v3io/scaler-types \
              && cd $GOPATH/src/github.com/v3io/scaler-types \
              && git checkout v1.0.0 \
              && cd $GOPATH/src/github.com/nuclio/nuclio
          make test-short

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Dump github context
        run: echo "$GITHUB_CONTEXT"
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}

      - name: Dump runner context
        run: echo "$RUNNER_CONTEXT"
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}

      - name: Dump github ref
        run: echo "$GITHUB_REF"

      # since github-actions gives us 14G only, and fills it up with some garbage
      # we will free up some space for us (~2GB)
      - name: Freeing up disk space
        run: |
          chmod +x "${GITHUB_WORKSPACE}/go/src/github.com/nuclio/nuclio/hack/scripts/ci/free-space.sh"
          "${GITHUB_WORKSPACE}/go/src/github.com/nuclio/nuclio/hack/scripts/ci/free-space.sh"

      - uses: actions/checkout@v2

      - uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Build
        run: make docker-images
        env:
          NUCLIO_DOCKER_REPO: ${{ env.REPO }}/${{ env.REPO_NAME }}

      - name: Build binaries
        run: |
          NUCLIO_OS=linux NUCLIO_ARCH=amd64 make tools
          NUCLIO_OS=darwin NUCLIO_ARCH=amd64 make tools
          NUCLIO_OS=windows NUCLIO_ARCH=amd64 make tools
        env:
          NUCLIO_NUCTL_CREATE_SYMLINK: false
