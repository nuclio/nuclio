# Copyright 2017 The Nuclio Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
name: Release

on:
  release:
    types:
    - created

  # Run Release on push to development for unstable
  push:
    branches:
    - development

env:
  REPO: quay.io
  REPO_NAME: nuclio

jobs:
  release:
    name: Release ${{ matrix.arch }}
    runs-on: ubuntu-latest
    if: github.repository == 'nuclio/nuclio'
    strategy:
      fail-fast: false
      matrix:
        arch: [ arm64, amd64 ]
    steps:
    - name: Dump github context
      run: echo "$GITHUB_CONTEXT"
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}

    - name: Dump runner context
      run: echo "$RUNNER_CONTEXT"
      env:
        RUNNER_CONTEXT: ${{ toJson(runner) }}

    - name: Dump github ref
      run: echo "$GITHUB_REF"

    - name: Extract ref info
      id: release_info
      run: |
        echo ::set-output name=REF_BRANCH::${GITHUB_REF#refs/heads/}
        echo ::set-output name=REF_TAG::${GITHUB_REF#refs/tags/}

    - name: Set NUCLIO_LABEL to unstable
      if: github.event_name == 'push' && steps.release_info.outputs.REF_BRANCH == 'development'
      run: |
        echo "NUCLIO_LABEL=unstable" >> $GITHUB_ENV

    - name: Set NUCLIO_LABEL to release tag
      if: github.event_name == 'release'
      run: |
        echo "NUCLIO_LABEL=${{ steps.release_info.outputs.REF_TAG }}" >> $GITHUB_ENV

    - uses: actions/checkout@v3

    - uses: actions/setup-go@v3
      with:
        cache: true

    - name: Extract git branch
      id: git_info
      run: |
        echo "name=branch::$(echo ${GITHUB_BASE_REF#refs/heads/})" >> $GITHUB_OUTPUT

    - name: Resolve docker cache tag
      id: docker_cache
      run: |
        export version_suffix=$(echo "${{ steps.git_info.outputs.branch }}" | grep -E "^[0-9]+\.[0-9]+\.x$" | tr -d '.')
        export unstable_tag=$(if [ -z "$version_suffix" ]; then echo "unstable-cache"; else echo "unstable-cache-$version_suffix";fi)
        echo "name=tag::$(echo $unstable_tag)" >> $GITHUB_OUTPUT

    # since github-actions gives us 14G only, and fills it up with some garbage
    # we will free up some space for us (~2GB)
    - name: Freeing up disk space
      run: |
        chmod +x "${GITHUB_WORKSPACE}/hack/scripts/ci/free-space.sh"
        "${GITHUB_WORKSPACE}/hack/scripts/ci/free-space.sh"

    - uses: azure/docker-login@v1
      with:
        login-server: ${{ env.REPO }}
        username: ${{ secrets.QUAYIO_DOCKER_USERNAME }}
        password: ${{ secrets.QUAYIO_DOCKER_PASSWORD }}

    # for none x86_64 platforms
    - name: Install QEMU
      if: matrix.arch != 'amd64'
      run: |

        # install os packages
        sudo apt update -qqy && sudo apt -qqy install qemu qemu-user-static

        # enabled non arm64 docker containers executables
        # mirrored to gcr.io/iguazio from multiarch/qemu-user-static:latest for availability reasons
        docker run --rm --privileged gcr.io/iguazio/multiarch/qemu-user-static:latest --reset -p yes

    - name: Build
      run: |
        make pull-image-cache || true
        make docker-images
      env:
        NUCLIO_DOCKER_REPO: ${{ env.REPO }}/${{ env.REPO_NAME }}
        NUCLIO_ARCH: ${{ matrix.arch }}
        NUCLIO_CACHE_LABEL: ${{ steps.docker_cache.outputs.tag }}

    - name: Push images
      run: |
        make push-docker-images

        # skip for now. will tackle in a different approach using buildkit.
        #make push-image-cache
      env:
        NUCLIO_DOCKER_REPO: ${{ env.REPO }}/${{ env.REPO_NAME }}
        NUCLIO_ARCH: ${{ matrix.arch }}
        NUCLIO_CACHE_LABEL: ${{ steps.docker_cache.outputs.tag }}

    - name: Tag and push stable images
      if: env.NUCLIO_LABEL != 'unstable' && github.event.release.target_commitish == 'master'
      run: |
        docker tag "$NUCLIO_DOCKER_REPO/dashboard:$NUCLIO_LABEL-$NUCLIO_ARCH" "$NUCLIO_DOCKER_REPO/dashboard:stable-$NUCLIO_ARCH"
        docker push "$NUCLIO_DOCKER_REPO/dashboard:stable-$NUCLIO_ARCH"
      env:
        NUCLIO_DOCKER_REPO: ${{ env.REPO }}/${{ env.REPO_NAME }}
        NUCLIO_ARCH: ${{ matrix.arch }}

    - name: Build binaries
      run: |
        NUCLIO_OS=linux make tools
        if [ $NUCLIO_ARCH == "amd64" ]; then \
          NUCLIO_OS=darwin make tools; \
          NUCLIO_OS=windows make tools; \
        fi;

      env:
        NUCLIO_NUCTL_CREATE_SYMLINK: false
        GOPATH: /home/runner/go
        NUCLIO_ARCH: ${{ matrix.arch }}

    - name: Upload binaries
      uses: AButler/upload-release-assets@v2.0.2
      if: github.event_name == 'release'
      with:
        files: '/home/runner/go/bin/nuctl-*'
        repo-token: ${{ secrets.GITHUB_TOKEN }}
